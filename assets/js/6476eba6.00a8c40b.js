(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[827],{5644:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return l}});var s=n(2122),a=n(9756),i=(n(7294),n(3905)),o={title:"Usage"},u={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Anywhere useCallback is used, useFixedCallback can be used in its place, except, if useCallback is used to trigger an update in a controlled component (which also should be avoided).",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/use-fixed/docs/usage",editUrl:"https://github.com/paulKabira/use-fixed/edit/master/docs/docs/usage.md",version:"current",frontMatter:{title:"Usage"},sidebar:"docs",previous:{title:"Introduction",permalink:"/use-fixed/docs/"},next:{title:"Implementation",permalink:"/use-fixed/docs/implementation"}},c=[{value:"useFixedCallback",id:"usefixedcallback",children:[]},{value:"useFixedGetter",id:"usefixedgetter",children:[]}],r={toc:c};function l(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,s.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Anywhere ",(0,i.kt)("strong",{parentName:"p"},"useCallback")," is used, ",(0,i.kt)("strong",{parentName:"p"},"useFixedCallback")," can be used in its place, except, if ",(0,i.kt)("strong",{parentName:"p"},"useCallback")," is used to trigger an update in a controlled component (which also should be avoided)."),(0,i.kt)("h3",{id:"usefixedcallback"},"useFixedCallback"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"import { useFixedCallback } from 'react';\n\nconst App = () => {\n  const [valid, setValid] = useState(false);\n\n- const onSubmit = useCallback(data => {\n-   if (valid) apiCall(data)\n-  }, [valid] )\n+ const onSubmit = useFixedCallback(data => {\n+   if (valid) apiCall(data)\n+ })\n\n  // ...\n\n  return <MyForm onSubmit={onSubmit} />\n};\n")),(0,i.kt)("h3",{id:"usefixedgetter"},"useFixedGetter"),(0,i.kt)("p",null,"To get reference to the latest state values, you can use ",(0,i.kt)("strong",{parentName:"p"},"useFixedGetter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"const App = () => {\n  const [counter, setCounter] = useState(0);\n  const [step, setStep] = useState(1)\n\n  const incrementByStep = s => setCounter(c => step+c)\n\n  const state = useFixedGetter({ step, incrementByStep, counter });\n\n  return <div>\n    Counter: {counter}, Step: {step}\n    <Child state={state}>\n  </div>;\n}\n\nconst Child = ({ state }) => {\n  const onClick = () => {\n    const { counter, incrementByStep, step, setStep } = state()\n    incrementByStep(counter + step + 1)\n    setStep(counter + step + 1)\n  }\n\n  return <button onClick={onClick}>\n    Change step {state.n().step} to {state.n().step + state.n().counter + 1}\n    & increment\n  </button>\n}\n")))}l.isMDXComponent=!0}}]);